// <auto-generated />
using System;
using MartianRobots.Database.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MartianRobots.Migrations
{
    [DbContext(typeof(MartianRobotsContext))]
    [Migration("20210925100532_Update-Model-Grid")]
    partial class UpdateModelGrid
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MartianRobots.Database.Entities.Grid", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Planet")
                        .HasColumnType("int");

                    b.Property<int>("XAxisLength")
                        .HasColumnType("int");

                    b.Property<int>("YAxisLength")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Grids");
                });

            modelBuilder.Entity("MartianRobots.Database.Entities.Module", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GridId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RobotId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<int>("X")
                        .HasColumnType("int");

                    b.Property<int>("Y")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GridId");

                    b.HasIndex("RobotId")
                        .IsUnique()
                        .HasFilter("[RobotId] IS NOT NULL");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("MartianRobots.Database.Entities.Robot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GridId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Lost")
                        .HasColumnType("bit");

                    b.Property<bool>("MissionEnded")
                        .HasColumnType("bit");

                    b.Property<int>("NumberOfMoves")
                        .HasColumnType("int");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GridId");

                    b.ToTable("Robots");
                });

            modelBuilder.Entity("MartianRobots.Database.Entities.Module", b =>
                {
                    b.HasOne("MartianRobots.Database.Entities.Grid", "Grid")
                        .WithMany("Modules")
                        .HasForeignKey("GridId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MartianRobots.Database.Entities.Robot", "Robot")
                        .WithOne("LastPosition")
                        .HasForeignKey("MartianRobots.Database.Entities.Module", "RobotId");

                    b.Navigation("Grid");

                    b.Navigation("Robot");
                });

            modelBuilder.Entity("MartianRobots.Database.Entities.Robot", b =>
                {
                    b.HasOne("MartianRobots.Database.Entities.Grid", "Grid")
                        .WithMany("Robots")
                        .HasForeignKey("GridId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grid");
                });

            modelBuilder.Entity("MartianRobots.Database.Entities.Grid", b =>
                {
                    b.Navigation("Modules");

                    b.Navigation("Robots");
                });

            modelBuilder.Entity("MartianRobots.Database.Entities.Robot", b =>
                {
                    b.Navigation("LastPosition");
                });
#pragma warning restore 612, 618
        }
    }
}
